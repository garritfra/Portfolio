{"pageProps":{"post":{"slug":"2023-03-16-terraform-project-learnings","markdownBody":"\r\nI just finished my first ever infrastructure project for a client. My Terraform skills are good enough to be dangerous, but during the development of this project I learned a lot that I would do differently next time.\r\n\r\n## Project structure\r\n\r\nHaving worked with semi-professional Terraform code before, I applied what I knew to my new project. That was mainly that we have a shared base and an overlay directory for each environment. I went with a single Terraform module for the shared infrastructure, and variables for each environment. Naively, roughly every service had their own file.\r\n\r\n```\r\n.\r\n├── modules\r\n│   └── infrastructure\r\n│       ├── alb.tf\r\n│       ├── cache.tf\r\n│       ├── database.tf\r\n│       ├── dns.tf\r\n│       ├── ecr.tf\r\n│       ├── ecs.tf\r\n│       ├── iam.tf\r\n│       ├── logs.tf\r\n│       ├── main.tf\r\n│       ├── network.tf\r\n│       ├── secrets.tf\r\n│       ├── security.tf\r\n│       ├── ssl.tf\r\n│       ├── state.tf\r\n│       └── variables.tf\r\n├── production\r\n│   ├── main.tf\r\n│   └── secrets.tf\r\n└── staging\r\n    ├── main.tf\r\n    └── secrets.tf\r\n```\r\n\r\nThis works very well, but I already started running into issues extending this setup. For my next project, I would probably find individual components and turn them into smaller reusable submodules. If I were to rewrite the project above, I would probably structure it like this (not a complete project, but I think you get the idea):\r\n\r\n```\r\n.\r\n├── modules\r\n│   └── infrastructure\r\n│       ├── main.tf\r\n│       ├── modules\r\n│       │   ├── database\r\n│       │   │   ├── iam.tf\r\n│       │   │   ├── logs.tf\r\n│       │   │   ├── main.tf\r\n│       │   │   ├── outputs.tf\r\n│       │   │   ├── rds.tf\r\n│       │   │   └── variables.tf\r\n│       │   ├── loadbalancer\r\n│       │   │   ├── alb.tf\r\n│       │   │   ├── logs.tf\r\n│       │   │   ├── main.tf\r\n│       │   │   ├── outputs.tf\r\n│       │   │   └── variables.tf\r\n│       │   ├── network\r\n│       │   │   ├── dns.tf\r\n│       │   │   ├── logs.tf\r\n│       │   │   ├── main.tf\r\n│       │   │   ├── outputs.tf\r\n│       │   │   ├── ssl.tf\r\n│       │   │   ├── variables.tf\r\n│       │   │   └── vpc.tf\r\n│       │   ├── service\r\n│       │   │   ├── ecr.tf\r\n│       │   │   ├── ecs.tf\r\n│       │   │   ├── iam.tf\r\n│       │   │   ├── logs.tf\r\n│       │   │   ├── main.tf\r\n│       │   │   ├── outputs.tf\r\n│       │   │   └── variables.tf\r\n│       │   └── state\r\n│       │       ├── locks.tf\r\n│       │       ├── main.tf\r\n│       │       ├── outputs.tf\r\n│       │       ├── s3.tf\r\n│       │       └── variables.tf\r\n│       ├── main.tf\r\n│       ├── outputs.tf\r\n│       └── variables.tf\r\n├── production\r\n│   ├── main.tf\r\n│   └── secrets.tf\r\n└── staging\r\n    ├── main.tf\r\n    └── secrets.tf\r\n```\r\n\r\n## Secrets\r\n\r\nI decided to use [git-crypt](https://github.com/AGWA/git-crypt) to manage secrets, but that was only before I learned about [SOPS](https://github.com/mozilla/sops). It's too late to migrate now, but if I could, I would choose SOPS for secrets any day of the week for upcoming projects. It even has a [Terraform provider](https://registry.terraform.io/providers/carlpett/sops/latest/docs), so there's no excuse not to use it. ;)\r\n\r\n## Conclusion\r\n\r\nOverall I'm pretty happy with how the project turned out, but there are some things that I learned during this project that will pay off later.\r\n\r\n---\r\n\r\nThis is post 057 of [#100DaysToOffload](https://100daystooffload.com/).\r\n","frontmatter":{"title":"Terraform project learnings","date":"2023-03-16","tags":"100DaysToOffload, infrastructure, aws, note, terraform, learnings, tech"},"tags":["100DaysToOffload","infrastructure","aws","note","terraform","learnings","tech"]},"recommendedPosts":[{"slug":"2024-05-24-going-from-self-hosted-to-managed-software","frontmatter":{"title":"Going from self hosted to managed software","date":"2024-05-24","tags":"infrastructure, note, learnings, opinion, homelab, tech"},"tags":["infrastructure","note","learnings","opinion","homelab","tech"]},{"slug":"2024-04-15-beware-of-base64-encoded-strings","frontmatter":{"title":"Beware of base64 encoded strings","date":"2024-04-15","tags":"guide, note, learnings, web, til, tech, programming"},"tags":["guide","note","learnings","web","til","tech","programming"]},{"slug":"2024-04-11-a-simple-search-bar","frontmatter":{"title":"A simple search bar","date":"2024-04-11","tags":"guide, note, meta, web, tech, programming"},"tags":["guide","note","meta","web","tech","programming"]},{"slug":"2024-04-10-beating-elden-ring","frontmatter":{"title":"Beating Elden Ring","date":"2024-04-10","tags":"note, learnings, life, review, gaming"},"tags":["note","learnings","life","review","gaming"]},{"slug":"2024-04-04-pandoc-convert-links-to-footnotes-the-easy-way","frontmatter":{"title":"Pandoc: Convert links to footnotes (the easy way)","date":"2024-04-04","tags":"guide, note, writing, til, tech, programming, pandoc"},"tags":["guide","note","writing","til","tech","programming","pandoc"]}]},"__N_SSG":true}