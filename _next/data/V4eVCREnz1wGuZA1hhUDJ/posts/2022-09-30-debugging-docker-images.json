{"pageProps":{"post":{"slug":"2022-09-30-debugging-docker-images","markdownBody":"\nDocker builds images incrementally. Every line in a Dockerfile will generate a\nnew image that builds on top of the last one. This can be really handy if\nsomething is not right in your build.\n\nSince version 18.09 Docker has added a new backend for building images,\n[buildkit](https://github.com/moby/buildkit#buildkit). Unfortunately, buildkit\ndoes not let you view the IDs of the intermediate containers it uses under the\nhood. To work around that, you can opt out of buildkit by running a build with\nbuildkit disabled:\n\n```sh\nDOCKER_BUILDKIT=0 docker build --pull --rm -t myproject:latest .\n```\n\nYou should now see the IDs of the intermediate containers:\n\n```sh\nSending build context to Docker daemon  87.84MB\nStep 1/16 : FROM node:16.15.1-alpine3.16 AS development\n16.15.1-alpine3.16: Pulling from library/node\nDigest: sha256:c785e617c8d7015190c0d41af52cc69be8a16e3d9eb7cb21f0bb58bcfca14d6b\nStatus: Image is up to date for node:16.15.1-alpine3.16\n ---> e548f8c9983f\nStep 2/16 : WORKDIR /usr/src/app\n ---> Using cache\n ---> 34e5c9bdb910\nStep 3/16 : COPY package*.json ./\n ---> Using cache\n ---> 626e4ae998fc\nStep 4/16 : RUN npm install glob rimraf\n ---> Using cache\n ---> 2d036b8354e0\nStep 5/16 : RUN npm install\n ---> Using cache\n ---> 948709b4957f      <-- HERE\nStep 6/16 : COPY . .\n...\n```\n\nAs mentioned, these IDs are valid docker images, so you can just launch them\nand attach a shell like every other image:\n\n```sh\ndocker run -ti --rm 948709b4957f\n```\n\nIf you're not seeing a regular shell, but a Node.js REPL for example, this\nmight be because the `ENTRYPOINT` of that image was set to the binary of that\nREPL. To work around that, you can override the entrypoint:\n\n```sh\ndocker run -ti --rm --entrypoint=/bin/sh 948709b4957f\n```\n\n## When is this helpful?\n\nIf your build fails at a particular step, you can attach a shell to the **last\nworking** step, inspect the filesystem, and execute the failing command manually.\n\nThat's all!\n\nThis is post 039 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"Debugging Docker images","date":"2022-09-30","tags":"note, 100DaysToOffload, guide, programming, docker, tech"},"tags":["note","100DaysToOffload","guide","programming","docker","tech"]},"recommendedPosts":[{"slug":"2024-05-24-going-from-self-hosted-to-managed-software","frontmatter":{"title":"Going from self hosted to managed software","date":"2024-05-24","tags":"infrastructure, note, learnings, opinion, homelab, tech"},"tags":["infrastructure","note","learnings","opinion","homelab","tech"]},{"slug":"2024-04-15-beware-of-base64-encoded-strings","frontmatter":{"title":"Beware of base64 encoded strings","date":"2024-04-15","tags":"guide, note, learnings, web, til, tech, programming"},"tags":["guide","note","learnings","web","til","tech","programming"]},{"slug":"2024-04-11-a-simple-search-bar","frontmatter":{"title":"A simple search bar","date":"2024-04-11","tags":"guide, note, meta, web, tech, programming"},"tags":["guide","note","meta","web","tech","programming"]},{"slug":"2024-04-04-pandoc-convert-links-to-footnotes-the-easy-way","frontmatter":{"title":"Pandoc: Convert links to footnotes (the easy way)","date":"2024-04-04","tags":"guide, note, writing, til, tech, programming, pandoc"},"tags":["guide","note","writing","til","tech","programming","pandoc"]},{"slug":"2024-04-02-fuck-trees-use-tags","frontmatter":{"title":"Fuck trees, use tags","date":"2024-04-02","tags":"note, opinion, tech"},"tags":["note","opinion","tech"]}]},"__N_SSG":true}