{"pageProps":{"post":{"slug":"2023-10-13-organizing-multiple-git-identities","markdownBody":"\nHere's a quick tip on how to manage multiple Git identities (e.g. personal, work, client1, client2).\r\n\r\nI organize my Git repos in three levels. My personal projects live in a `~/sources` directory. All my work projects live in `~/work`. This is the first level.\r\n\r\nLevel 2 is the client, e.g. `~/work/client1`. Naturally, level 3 is the project repository: `~/work/client1/foo-api`.\r\n\r\nThis is how my work directory is organized:\r\n\r\n```\r\n/Users/garrit/work\r\n├── client1\r\n│   ├── foo-api\r\n│   ├── foo-ios\r\n│   └── foo-android\r\n└── client2\r\n    ├── bar-ios\r\n    └── bar-middleware\r\n```\r\n\r\nNow, say that `client2` demands that we commit with a different identity than our default work email. Besides that, you probably also have a personal email address for your own projects. How do you manage that?\r\n\r\n## .gitconfig includes\r\n\r\nThe global configuration file for Git is `~/.gitconfig`. If you've ever set a parameter like `git config user.name \"Foo Bar\"`: this is where it ended up.\r\n\r\nOne awesome feature of the .gitconfig file is that you can **conditionally include other config files**, and this is what does the trick. Here's my `~/.gitconfig` file:\r\n\r\n```ini\r\n[user]\r\n    name = Garrit Franke\r\n    email = garrit@slashdev.space\r\n\r\n[includeIf \"gitdir:~/work/\"]\r\n    path = ~/.gitconfig-work\r\n\r\n[includeIf \"gitdir:~/work/client2/\"]\r\n    path = ~/.gitconfig-client2\r\n\r\n[includeIf \"gitdir:~/sources/\"]\r\n    path = ~/.gitconfig-personal\r\n\r\n# ...\r\n```\r\n\r\nBy default, my name and email are always set to my personal identity. I also store some other global settings here, but those are not relevant for this post. If the repository is located inside the `~/work` directory, a file named `~/.gitconfig-work` is included. This is just another gitconfig file. This is what that looks like in my case:\r\n\r\n```ini\r\n[user]\r\n    name = Garrit Franke\r\n    signingkey = 12345678\r\n    email = garrit@work.de\r\n\r\n[commit]\r\n    gpgsign = true\r\n```\r\n\r\nI hope you'll see where this is going. For every identity, you keep a separate gitconfig file and include it in the main `~/.gitconfig`. Crucially, this requires you to organize your repositories grouped by client.\r\n\r\nThis trick has simplified my project onboarding quite a bit. No more \"You forgot to update your Email Address\" requests from clients!\r\n\r\n---\r\n\r\nThis is post 083 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"Organizing multiple Git identities","date":"2023-10-13","tags":"100DaysToOffload, guide, note, til, git, tech"},"tags":["100DaysToOffload","guide","note","til","git","tech"]},"recommendedPosts":[{"slug":"2024-06-27-testing-smtp-connections","frontmatter":{"title":"Testing SMTP connections","date":"2024-06-27","tags":"infrastructure, guide, note, learnings, tech"},"tags":["infrastructure","guide","note","learnings","tech"]},{"slug":"2024-06-17-host-your-own-llm","frontmatter":{"title":"Host your own LLM","date":"2024-06-17","tags":"infrastructure, guide, note, homelab, tech, llm, ai"},"tags":["infrastructure","guide","note","homelab","tech","llm","ai"]},{"slug":"2024-06-03-i-just-cleaned-up-40-gb-of-brew-caches","frontmatter":{"title":"I just cleaned up 40 GB of Brew caches","date":"2024-06-03","tags":"guide, note, tech"},"tags":["guide","note","tech"]},{"slug":"2024-05-24-going-from-self-hosted-to-managed-software","frontmatter":{"title":"Going from self hosted to managed software","date":"2024-05-24","tags":"infrastructure, note, learnings, opinion, homelab, tech"},"tags":["infrastructure","note","learnings","opinion","homelab","tech"]},{"slug":"2024-04-15-beware-of-base64-encoded-strings","frontmatter":{"title":"Beware of base64 encoded strings","date":"2024-04-15","tags":"guide, note, learnings, web, til, tech, programming"},"tags":["guide","note","learnings","web","til","tech","programming"]}]},"__N_SSG":true}