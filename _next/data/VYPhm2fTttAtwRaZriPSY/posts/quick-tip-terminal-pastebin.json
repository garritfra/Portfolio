{"pageProps":{"post":{"slug":"quick-tip-terminal-pastebin","markdownBody":"\nEver find yourself in a situation where you simply want to save or share the output of a terminal command? Selecting, copying and pasting text from stdout always feels quite tedious, if you just want to share the contents of a file.\n\nA project called [Termbin](https://termbin.com/) tries to simplify this process. Just pipe the command you want to save to the following url on port `9999`, using Netcat:\n\n```sh\necho \"Hello, Blog!\" | nc termbin.com 9999\n```\n\nInstead of showing the output, it will be forwarded to Termbin and show the URL, under which your output will be available:\n\n```sh\n➜  blog git:(master) ✗ cat ./some_file.txt | nc termbin.com 9999\nhttps://termbin.com/faos\n➜  blog git:(master) ✗\n```\n\nSure enough, after navigating to [`https://termbin.com/faos`](https://termbin.com/faos), we will see the contents of `some_file.txt`. Neat!\n\n### ⚠️Word of Caution⚠️\n\nDo not pipe any personal information, credentials or any other private data into termbin. It will be instantly available to the general public, and theres no quick way to remove it.\n\nHappy Pasting!✨\n","frontmatter":{"title":"Quick Tip! Sharing terminal output with Termbin","date":"2019-12-31","tags":"quick-tip, note"},"tags":["quick-tip","note"]},"recommendedPosts":[{"slug":"2023-02-19-til-about-css-insets","markdownBody":"\r\nJust a quick tip that I thought is worth sharing. Instead of declaring:\r\n\r\n```css\r\n.foo { \r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n}\r\n```\r\n\r\nyou can just use:\r\n\r\n```css\r\n.foo {\r\n  inset: 0;\r\n}\r\n```\r\n\r\nIt's supported everywhere computers are sold!\r\n\r\nMDN: https://developer.mozilla.org/en-US/docs/Web/CSS/inset\r\n\r\nSource: https://front-end.social/@estelle/109878532782943511\r\n\r\nThis is post 047 of [#100DaysToOffload](https://100daystooffload.com/).\r\n","frontmatter":{"title":"TIL about CSS Insets","date":"2023-02-19","tags":"web, note, til, quick-tip, css, 100DaysToOffload"},"tags":["web","note","til","quick-tip","css","100DaysToOffload"]},{"slug":"2021-12-21-usetoggle-react-hook","markdownBody":"\nHere's a useful react hook for situations where you have to keep track of the\nstate of a dialog, popup, etc.:\n\n```js\nimport { useState } from \"react\";\n\nexport default (value) => {\n\tconst [state, setState] = useState(value);\n\n\tconst setStateActive = () => {\n\t\tsetState(true);\n\t};\n\n\tconst setStateInactive = () => {\n\t\tsetState(false);\n\t};\n\n\treturn [state, setStateActive, setStateInactive];\n};\n```\n\nUsage:\n\n```js\nconst SomeComponent = () => {\n\tconst [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] =\n\t\tuseToggle(false);\n\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={openDeleteDialog}>Open Delete Dialog</Button>\n\t\t\t<Dialog isOpen={isDeleteDialogOpen} onClose={closeDeleteDialog}></Dialog>\n\t\t</>\n\t);\n};\n```\n\nThis is post 021 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"Quick tip! React useToggle Hook","date":"2021-12-21","tags":"javascript, react, quick-tip, 100DaysToOffload, web, programming"},"tags":["javascript","react","quick-tip","100DaysToOffload","web","programming"]}]},"__N_SSG":true}