{"pageProps":{"post":{"slug":"2022-12-05-contributing-to-open-source-knowledge","markdownBody":"\nI wrote the initial draft for this post a few months ago, traveling through\nNorway in a rented campervan. While roaming the beautiful landscapes, I spent a\nlot of time thinking. Reading books while traveling really is the best way to\nfind new inspiration.\n\nOn our trip, we wanted to try out an alternative to Google Maps. Most of the\nOpenStreetMap-based apps lack important features, but we recently stumbled upon\n[MagicEarth](https://www.magicearth.com/), which perfectly fills the void.\nOpenStreetMap has been 95% accurate for us. Those last 5% are mostly less famous\nhiking trails and attractions that could easily be filled in by people like you\nand me. This inspired me to write this blog post, where I share six ways that\nyou can contribute to open source knowledge right now.\n\n## OpenStreetMap\n\nAs mentioned above, I spotted some minor inconsistencies in\n[OpenStreetMap](https://openstreetmap.org) while driving through Norway. We\ntracked our hikes with an app that is able to export a GPX file, which can be\nimported to OpenStreetMap to check if the trail matches (or if it is missing),\nand took note of incorrect or sloppy roads/buildings. Back home, I plan to sit\ndown and fix up those issues.\n\nBut you don't have to be on a roadtrip to contribute to OpenStreetMap! Chances\nare you know your local surroundings pretty well. Just navigate to your\nneighborhood and see what could be improved. Maybe you know a public toilet, a\npark or a secret road that is not shown on the map? As a matter of fact, my\nprivate address was missing, so I added it via the editor. I can now use any of\nthe many OpenStreetMap-based apps to navigate home!\n\n## Wikipedia (and other wikis)\n\nI often feel like I can't contribute much to the vast knowledge of Wikipedia.\n_Other people are way smarter than me_ and whatnot. But while you might not be\nable to publish worthy edits to a well-known topic, you might know some things\nthat others haven't thought of. Is there an entry about your local town? Is\nthere an interesting member of your (past) family that others might want to read\nabout?\n\nOf course, there are other wikis beside Wikipedia. Are you using a little-known\ntool that has open source documentation in the form of a wiki? How can it be\nimproved?\n\n## Observation\n\nYou might have never heard of [observation.org](https://observation.org). It's\nan open biodiversity- and nature-database. I just recently learned about them in\nour local museum. They had a special exhibition about insects, and called out\nfor contributions to map out our local flora and fauna.\n\nThe idea is simple: snap a picture of an interesting looking insect or plant,\nupload it using the website (or one of their apps) and create an \"observation\".\nUsing this information, researchers will be able to understand the biodiversity\nof your area. The information is free to use, and anyone can contribute!\n\n## Wardriving\n\nWardriving is a fun and useful way to contribute to open source knowledge. By\ndriving around with a device that can detect and record wireless networks, you\ncan help to map out the wireless coverage in your area. This information can be\nused by researchers, network operators, and other interested parties to\nunderstand the availability and quality of wireless networks.\n\nOne popular tool for wardriving is [WiGLE](https://wigle.net/). WiGLE allows you\nto easily collect and share information about wireless networks, and contribute\nto the global wireless map. To get started with WiGLE, you will need a device\nthat can detect and record wireless networks. This can be a smartphone, laptop,\nor dedicated wardriving device. You will also need to download and install the\nWiGLE app, and some basic knowledge of how to use it.\n\nOnce you have set up WiGLE, you can start driving around and mapping out the\nwireless networks in your area. As you collect data, it will be automatically\nuploaded to the WiGLE database, where it can be used by researchers and other\ninterested parties. Wardriving with WiGLE is a fun and easy way to help advance\nscientific research and understanding.\n\n## folding@home\n\nAnother way to contribute to open source knowledge is to participate in the\n[folding@home](https://foldingathome.org/) project. folding@home is a\ndistributed computing project that uses the idle processing power of volunteers'\ncomputers to perform scientific calculations and simulations. These calculations\nare used to study a wide range of topics, including protein folding, drug\ndesign, and the origins of the universe.\n\nBy joining the folding@home network, you can help to advance scientific research\nand discovery. The project is open to anyone, and you can participate using your\npersonal computer, laptop, or even your smartphone. All you need to do is\ndownload and install the folding@home software, and then select the types of\ncalculations that you want to contribute to.\n\nThe folding@home project is a great way to put your idle computing power to good\nuse, and to contribute to the global effort to advance scientific knowledge. To\nlearn more, visit the [folding@home website](https://foldingathome.org/).\n\n## Blog posts\n\nWriting a blog post is a fun and engaging way to contribute to open source\nknowledge. You don't need to be a professional writer or have a formal writing\nstyle. Just jot down some notes about a topic that you are passionate about, and\nshare your experiences and expertise with others.\n\nNot only will you be helping others to learn from your experiences, but writing\na blog post can also be beneficial for yourself. Capturing your thoughts and\nideas in writing can help you to better understand and organize your own\nknowledge. It can also be a great way to reflect on your experiences and to\nlearn from your successes and failures.\n\nIf you're interested in blogging, you might want to check out the\n[100DaysToOffload](https://100daystooffload.com/) project!\n\n# Wrapping up\n\nAs you can see, there are many ways that you can contribute to open source\nknowledge, even if you don't have a lot of time or expertise. By participating\nin projects like OpenStreetMap, Wikipedia, observation.org, and folding@home, or\nby sharing your experiences and expertise through blog posts, you can make a\nreal difference in the community.\n\nWhy not give it a try? You might be surprised by how much you can learn and how\nmuch you can help others. And who knows, you might even have some fun along the\nway! Thanks for reading, and happy contributing!\n\nThis is post 044 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"6 ways you can contribute to open knowledge right now","date":"2022-12-05","tags":"note, guide, practices, 100DaysToOffload"},"tags":["note","guide","practices","100DaysToOffload"]},"recommendedPosts":[{"slug":"2023-06-01-single-page-applications-on-github-pages","markdownBody":"\nMy latest project, [sendpasswords.net](https://sendpasswords.net/) is a [Single Page Application](https://developer.mozilla.org/en-US/docs/Glossary/SPA) deployed on GitHub Pages.\n\nGitHub Pages is configured in a way to host static HTML files without any bells and whistles. This means that if you try to fetch a document that's *not* the index, for example `/foo`, the server will try to load the file with that name. \n\nBy nature, SPAs only consist of a single HTML entry point (`index.html` in most cases). It's responsible for routing the user to the correct page if there are multiple paths. And here's the crux: if the user tries to load `/foo`, he will not land at the SPA entry point. Instead, he will see a `404` error.\n\n## The solution\n\nA `404` response will automatically return a file called `404.html`, which we can use to our advantage. After building the application, simply copy the `index.html` to `404.html`, as demonstrated by [this commit](https://github.com/garritfra/sendpasswords.net/commit/66bdb68c229a3ac3386f7816a746155e658eb586). This will use `index.html` to serve the application on the root level, and `404.html` to load *the same app* if the page doesn't exist as a file. Whether the `index.html` is needed if there's already a `404.html` is up to you. I left it in to make clear that this is just a workaround.\n\nThis is a [well known](https://stackoverflow.com/a/69308662/9046809) workaround, but I wanted to bring some extra awareness to it, since it's a problem I ran into a couple of times so far. Happy SPAing!\n\n---\n\nThis is post 069 (nice) of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"Single Page Applications on GitHub Pages","date":"2023-06-01","tags":"100DaysToOffload, guide, note, web, javascript, github"},"tags":["100DaysToOffload","guide","note","web","javascript","github"]},{"slug":"2023-05-19-work-batch-sizing","markdownBody":"\nI've been playing \n[Carcassonne](https://en.m.wikipedia.org/wiki/Carcassonne_(board_game)) a lot with my girlfriend recently. It's a boardgame about building cities, roads and farms, and each completed \"project\" earns you some amount of points. The twist is that there's only a limited number of tiles, and once all tiles are used, the game is over unfinished projects are discarded.\n\nThe first couple of playthroughs I tried to maximize my score by increasing the number of projects I actively had going. I'd start a new city or road whenever I could, thinking that the multipliers you sometimes get would pay off in the end. Boy was I wrong.\n\nWhere I'm from, we have multiple sayings for this approach. \"Having too many irons in the fire\" or \"dancing on too many parties\". I was too busy starting new projects instead of making actual progress.\n\nA far better approach is to finish projects early, earning less points, but with a greater certainty that they will pay off. With every project you start, the likelyhood of the other projects paying off decreases.\n\nKeeping batch sizes small was a key concept of the [lean manufacturing movement](https://en.m.wikipedia.org/wiki/Lean_manufacturing) in the 1980s, and has since been adopted by the [DevOps movement](https://de.m.wikipedia.org/wiki/DevOps) for the IT industry. If you want to learn more about this topic, you should check out [The DevOps Handbook](https://itrevolution.com/product/the-devops-handbook-second-edition/). It goes well beyond the basics of making IT processes more productive and efficient.\n\nAfter realizing that small batch sizes are the key to success, I haven't lost a game of Carcassonne since. I hope you're not reading this, honey.🤭\n\n---\n\nThis is post 068 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"Optimizing work batch size","date":"2023-05-19","tags":"100DaysToOffload, note, practices, learnings, life, devops"},"tags":["100DaysToOffload","note","practices","learnings","life","devops"]},{"slug":"2023-04-27-migrating-homeassistant-from-sd-to-ssd","markdownBody":"\nI finally got frustrated with the performance of my Raspberry Pi 4 running Homeassistant on a SD card, so I went ahead and got an SSD.\r\n\r\nThe migration was **very** easy:\r\n\r\n1. Create and download a full backup through the UI\r\n2. Flash Homeassistant onto the SSD\r\n3. Remove the SD card and plug the SSD into a USB 3.0 port of the Pi\r\n4. Boot\r\n5. Go through the onboarding procedure\r\n6. Restore Backup\r\n7. Profit\r\n\r\nIt worked like a charm! The speed has improved A LOT, and everything was set up as it should be. \r\n\r\n...Until we turned on the lights in the livingroom. My ZigBee-dongle, plugged into another USB port, wasn't able to communicate with the devices on the network.\r\n\r\nAfter some digging around, I came across several threads stating that an SSD over USB 3.0 apparently creates a lot of interference to surrounding hardware, including my ZigBee dongle. The fix was simple: either get an extension port for the dongle, or plug the SSD into a USB 2.0 port of the Pi. Since I didn't have an extension cord to get the dongle far away enough from the SSD, I went with the latter option for now. And that fixed it! The performance was much worse, but still better than the SD I used before. My next step will be to grab an extension cord from my parents. I'm sure they won't mind.\r\n\r\nI hope this helps!\r\n\r\n---\r\n\r\nThis is post 066 of [#100DaysToOffload](https://100daystooffload.com/).\r\n\r\n\r\n\r\n\r\n\n","frontmatter":{"title":"Migrating Homeassistant from SD to SSD","date":"2023-04-27","tags":"100DaysToOffload, guide, note, homeassistant, homelab"},"tags":["100DaysToOffload","guide","note","homeassistant","homelab"]},{"slug":"2023-04-22-the-role-of-a-devops-engineer","markdownBody":"\nThe term \"DevOps\" can be interpreted in many different ways. It's often thrown around as a buzzword whenever somebody is talking about \"what comes after development\". Obviously, it's not just that. Or is it? It depends on whom you're talking to.\r\n\r\nAlthough I just recently started my new role as a \"DevOps Engineer\", I'm still discovering what that term means to me. I just had a fruitful conversation with the DevOps lead of a client, and they phrased this role in a very fitting way.\r\n\r\n> A DevOps Engineer doesn't push the button, they enable the developers to push the button themselves.\r\n\r\nTo me this role is fascinating, since it touches so many different aspects of software delivery.\r\n\r\n---\r\n\r\nThis is post 065 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"The role of a DevOps Engineer","date":"2023-04-22","tags":"100DaysToOffload, note, practices, devops"},"tags":["100DaysToOffload","note","practices","devops"]},{"slug":"2023-04-12-instant-dark-theme","markdownBody":"\nThanks to [Jacksons](https://jacksonchen666.com/) [update to darktheme.club](https://github.com/garritfra/darktheme.club/pull/79), I just came across a neat little [CSS property](https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme) that turns a mostly CSS-free document into a pleasantly dark site:\r\n\r\n```css\r\n:root {\r\n  color-scheme: light dark;\r\n}\r\n```\r\n\r\nThis will adjust all elements on the page to the color scheme preferred by the user - without any other custom styles! 🤯 It is also [widely supported](https://caniuse.com/mdn-css_properties_color-scheme) by browsers.\r\n\r\nI've always been quite dependent on CSS-frameworks for any project I'm starting. Going forward, I'd be interested to see how framework-less sites would feel using this property. If all else fails, there's always the awesome [simple.css](https://simplecss.org/) library, which you can slap on top of a raw document to make it pretty (and dark, if preferred) without using custom classes.\r\n\r\n---\r\n\r\nThis is post 064 of [#100DaysToOffload](https://100daystooffload.com/).\n","frontmatter":{"title":"Instant dark theme","date":"2023-04-12","tags":"100DaysToOffload, guide, note, learnings, web, css, til"},"tags":["100DaysToOffload","guide","note","learnings","web","css","til"]}]},"__N_SSG":true}