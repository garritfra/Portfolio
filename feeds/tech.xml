<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>
            garrit.xyz
        </title>
        <link>
            https://garrit.xyz
        </link>
        <description>
            Garrit Franke
        </description>
        <language>
            en
        </language>
        <lastBuildDate>
            Wed, 01 Nov 2023 00:00:00 +0000
        </lastBuildDate>
        <item>
            <title>
                Tracking SQLite Database Changes in Git
            </title>
            <guid>
                https://garrit.xyz/posts/2023-11-01-tracking-sqlite-database-changes-in-git
            </guid>
            <link>
                https://garrit.xyz/posts/2023-11-01-tracking-sqlite-database-changes-in-git?utm_source=rss
            </link>
            <pubDate>
                Wed, 01 Nov 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>SQLite stores data in binary. If you run <code>cat mydb.sqlite</code>, you&#39;ll see a bunch of gibberish that doesn&#39;t resemble structured data at all. If you want to track changes and updates to a database using Git, you won&#39;t be able to see full diffs by default. You&#39;ll see that the file has changed, but not what changed exactly:</p>

<p><code>diff
diff --git a/mydb.sqlite b/mydb.sqlite
index f412c72..8f49ea5 100644
Binary files a/mydb.sqlite and b/mydb.sqlite differ
</code></p>

<p>So, is there a way around that? Turns out: there is! Here&#39;s a diff between two states of the SQLite database of <a href="https://www.gnucash.org/index.phtml">GnuCash</a>, which I&#39;m currently trying out to manage my finances. I&#39;ll explain how I got this diff afterwards:</p>

<p><code>diff
diff --git a/garritfranke.gnucash b/garritfranke.gnucash
index f412c72..8f49ea5 100644
--- a/garritfranke.gnucash
+++ b/garritfranke.gnucash
@@ -100,18 +100,22 @@ INSERT INTO accounts VALUES(&#39;ca11987c1c804da4b47b70d0fda87f10&#39;,&#39;Strom&#39;,&#39;EXPENSE&#39;
 INSERT INTO accounts VALUES(&#39;d46a7709ed004d1d867560acae6e690d&#39;,&#39;Wasser&#39;,&#39;EXPENSE&#39;,&#39;26cc1292cf3e4f9584c71e7b3ec28479&#39;,100,0,&#39;1dabf5f9f4544a1798e835feb7f9752e&#39;,&#39;&#39;,&#39;Wasser&#39;,0,0);
 INSERT INTO accounts VALUES(&#39;a0f46eb546e34555ab4d0d3cc32c320f&#39;,&#39;Anfangsbestand&#39;,&#39;EQUITY&#39;,&#39;26cc1292cf3e4f9584c71e7b3ec28479&#39;,100,0,&#39;39e1c61538e24572abfcf0f3f72022ac&#39;,&#39;&#39;,&#39;Anfangsbestand&#39;,0,0);
 INSERT INTO accounts VALUES(&#39;b1674455d6ec495c8898bcfb65ef100c&#39;,&#39;Template Root&#39;,&#39;ROOT&#39;,NULL,0,0,NULL,&#39;&#39;,&#39;&#39;,0,0);
+INSERT INTO accounts VALUES(&#39;9d2959ea65fc4f29b02dbc593fa9598a&#39;,&#39;Ausgleichskonto-EUR&#39;,&#39;BANK&#39;,&#39;26cc1292cf3e4f9584c71e7b3ec28479&#39;,100,0,&#39;39e1c61538e24572abfcf0f3f72022ac&#39;,&#39;&#39;,&#39;&#39;,0,0);
 CREATE TABLE budgets(guid text(32) PRIMARY KEY NOT NULL, name text(2048) NOT NULL, description text(2048), num_periods integer NOT NULL);
 CREATE TABLE budget_amounts(id integer PRIMARY KEY AUTOINCREMENT NOT NULL, budget_guid text(32) NOT NULL, account_guid text(32) NOT NULL, period_num integer NOT NULL, amount_num bigint NOT NULL, amount_denom bigint NOT NULL);
 CREATE TABLE prices(guid text(32) PRIMARY KEY NOT NULL, commodity_guid text(32) NOT NULL, currency_guid text(32) NOT NULL, date text(19) NOT NULL, source text(2048), type text(2048), value_num bigint NOT NULL, value_denom bigint NOT NULL);
 CREATE TABLE transactions(guid text(32) PRIMARY KEY NOT NULL, currency_guid text(32) NOT NULL, num text(2048) NOT NULL, post_date text(19), enter_date text(19), description text(2048));
 INSERT INTO transactions VALUES(&#39;19fcf3419e8947f79a4c0b90a211f65a&#39;,&#39;26cc1292cf3e4f9584c71e7b3ec28479&#39;,&#39;&#39;,&#39;2023-11-01 10:59:00&#39;,&#39;2023-11-01 07:51:28&#39;,&#39;Golem Media GmbH&#39;);
 INSERT INTO transactions VALUES(&#39;10cecb081ac24ab5a369c93f96d293da&#39;,&#39;26cc1292cf3e4f9584c71e7b3ec28479&#39;,&#39;0010&#39;,&#39;2023-03-03 10:59:00&#39;,&#39;2023-11-01 07:42:11&#39;,&#39;Golem Media GmbH&#39;);
+INSERT INTO transactions VALUES(&#39;db9eff5ec00145f293c85391becbefa8&#39;,&#39;26cc1292cf3e4f9584c71e7b3ec28479&#39;,&#39;&#39;,&#39;2023-11-01 10:59:00&#39;,&#39;2023-11-01 11:36:23&#39;,&#39;TEST&#39;);
 CREATE TABLE splits(guid text(32) PRIMARY KEY NOT NULL, tx_guid text(32) NOT NULL, account_guid text(32) NOT NULL, memo text(2048) NOT NULL, action text(2048) NOT NULL, reconcile_state text(1) NOT NULL, reconcile_date text(19), value_num bigint NOT NULL, value_denom bigint NOT NULL, quantity_num bigint NOT NULL, quantity_denom bigint NOT NULL, lot_guid text(32));
 INSERT INTO splits VALUES(&#39;38f3b209163d45d6b03a09bcf1af57af&#39;,&#39;19fcf3419e8947f79a4c0b90a211f65a&#39;,&#39;f164a4bc095e480fbff449a4c8429e13&#39;,&#39;&#39;,&#39;Zahlung&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,25000,100,25000,100,NULL);
 INSERT INTO splits VALUES(&#39;7dc395755d0046a1b40d16812cc3eab8&#39;,&#39;19fcf3419e8947f79a4c0b90a211f65a&#39;,&#39;1d93d1e67aed4320bb228c16f4e28092&#39;,&#39;&#39;,&#39;Zahlung&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,-25000,100,-25000,100,&#39;b94c643ddcda48bcb7fc58626452e825&#39;);
 INSERT INTO splits VALUES(&#39;e45aeb0ac0274c6483f8deb2e7ad3743&#39;,&#39;10cecb081ac24ab5a369c93f96d293da&#39;,&#39;d229160352064f8c80090e0a10a57d9c&#39;,&#39;&#39;,&#39;Rechnung&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,0,100,0,100,NULL);
 INSERT INTO splits VALUES(&#39;bb9d2818bdc14be9bb916f3efd82e77d&#39;,&#39;10cecb081ac24ab5a369c93f96d293da&#39;,&#39;1d93d1e67aed4320bb228c16f4e28092&#39;,&#39;&#39;,&#39;Rechnung&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,25000,100,25000,100,&#39;b94c643ddcda48bcb7fc58626452e825&#39;);
 INSERT INTO splits VALUES(&#39;62747f45556740fe836c9f2180fe70c9&#39;,&#39;10cecb081ac24ab5a369c93f96d293da&#39;,&#39;4d6616d8c6524ead86641559539caf50&#39;,&#39;&#39;,&#39;Rechnung&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,-25000,100,-25000,100,NULL);
+INSERT INTO splits VALUES(&#39;029f58c4d85c497c8e06ad4e52090033&#39;,&#39;db9eff5ec00145f293c85391becbefa8&#39;,&#39;a0f46eb546e34555ab4d0d3cc32c320f&#39;,&#39;&#39;,&#39;&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,-10000,100,-10000,100,NULL);
+INSERT INTO splits VALUES(&#39;433a48cfdd314c94a105b5db9e7839de&#39;,&#39;db9eff5ec00145f293c85391becbefa8&#39;,&#39;9d2959ea65fc4f29b02dbc593fa9598a&#39;,&#39;&#39;,&#39;&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,10000,100,10000,100,NULL);
 CREATE TABLE slots(id integer PRIMARY KEY AUTOINCREMENT NOT NULL, obj_guid text(32) NOT NULL, name text(4096) NOT NULL, slot_type integer NOT NULL, int64_val bigint, string_val text(4096), double_val float8, timespec_val text(19), guid_val text(32), numeric_val_num bigint, numeric_val_denom bigint, gdate_val text(8));
 INSERT INTO slots VALUES(1,&#39;bb6348dea99f491f8fded647d0573924&#39;,&#39;counter_formats&#39;,9,0,NULL,NULL,&#39;1970-01-01 00:00:00&#39;,&#39;6259d35c728a4a01aa09e043476080cf&#39;,0,1,NULL);
 INSERT INTO slots VALUES(2,&#39;6259d35c728a4a01aa09e043476080cf&#39;,&#39;counter_formats/gncBill&#39;,4,0,&#39;&#39;,NULL,&#39;1970-01-01 00:00:00&#39;,NULL,0,1,NULL);
@@ -198,6 +202,7 @@ INSERT INTO slots VALUES(82,&#39;ded0ed100fda4f8ea9192f987b4edbd1&#39;,&#39;credit-note&#39;,1,0
 INSERT INTO slots VALUES(83,&#39;7175c84ff2c142bb83944530d9cff2b9&#39;,&#39;job-rate&#39;,3,0,NULL,NULL,&#39;1970-01-01 00:00:00&#39;,NULL,250,1,NULL);
 INSERT INTO slots VALUES(84,&#39;d9d25d75a993434597d988baa65670bb&#39;,&#39;job-rate&#39;,3,0,NULL,NULL,&#39;1970-01-01 00:00:00&#39;,NULL,250,1,NULL);
 INSERT INTO slots VALUES(85,&#39;38cde72240424e8b9e3ab5d4852c9cf0&#39;,&#39;job-rate&#39;,3,0,NULL,NULL,&#39;1970-01-01 00:00:00&#39;,NULL,100,1,NULL);
+INSERT INTO slots VALUES(88,&#39;db9eff5ec00145f293c85391becbefa8&#39;,&#39;date-posted&#39;,10,0,NULL,NULL,&#39;1970-01-01 00:00:00&#39;,NULL,0,1,&#39;20231101&#39;);
 CREATE TABLE recurrences(id integer PRIMARY KEY AUTOINCREMENT NOT NULL, obj_guid text(32) NOT NULL, recurrence_mult integer NOT NULL, recurrence_period_type text(2048) NOT NULL, recurrence_period_start text(8) NOT NULL, recurrence_weekend_adjust text(2048) NOT NULL);
 CREATE TABLE schedxactions(guid text(32) PRIMARY KEY NOT NULL, name text(2048), enabled integer NOT NULL, start_date text(8), end_date text(8), last_occur text(8), num_occur integer NOT NULL, rem_occur integer NOT NULL, auto_create integer NOT NULL, auto_notify integer NOT NULL, adv_creation integer NOT NULL, adv_notify integer NOT NULL, instance_count integer NOT NULL, template_act_guid text(32) NOT NULL);
 CREATE TABLE lots(guid text(32) PRIMARY KEY NOT NULL, account_guid text(32), is_closed integer NOT NULL);
@@ -234,7 +239,7 @@ INSERT INTO taxtable_entries VALUES(3,&#39;1d459b285fca4de3bb4659744dc0cec5&#39;,&#39;d22916
 INSERT INTO taxtable_entries VALUES(5,&#39;6def0d3a788d414b818ecdb29ba3dcd1&#39;,&#39;d229160352064f8c80090e0a10a57d9c&#39;,0,100000,2);
 CREATE TABLE vendors(guid text(32) PRIMARY KEY NOT NULL, name text(2048) NOT NULL, id text(2048) NOT NULL, notes text(2048) NOT NULL, currency text(32) NOT NULL, active integer NOT NULL, tax_override integer NOT NULL, addr_name text(1024), addr_addr1 text(1024), addr_addr2 text(1024), addr_addr3 text(1024), addr_addr4 text(1024), addr_phone text(128), addr_fax text(128), addr_email text(256), terms text(32), tax_inc text(2048), tax_table text(32));
 DELETE FROM sqlite_sequence;
-INSERT INTO sqlite_sequence VALUES(&#39;slots&#39;,87);
+INSERT INTO sqlite_sequence VALUES(&#39;slots&#39;,88);
 INSERT INTO sqlite_sequence VALUES(&#39;taxtable_entries&#39;,5);
 CREATE INDEX tx_post_date_index ON transactions(post_date);
 CREATE INDEX splits_tx_guid_index ON splits(tx_guid);
</code></p>

<p>First, add a diff type called &quot;sqlite3&quot; to your config. The simplest way is to just run these commands:</p>

<p><code>shell
git config diff.sqlite3.binary true
git config diff.sqlite3.textconv &quot;echo .dump | sqlite3&quot;
</code></p>

<p>Alternatively, you can add this snippet to your <code>~/.gitconfig</code> or <code>.git/config</code> in your repository:</p>

<p><code>gitconfig
[diff &quot;sqlite3&quot;]
        binary = true
        textconv = &quot;echo .dump | sqlite3&quot;
</code></p>

<p>Next, create a file called <code>.gitattributes</code> if it&#39;s not already present and add this line:</p>

<p><code>gitattributes
*.sqlite diff=sqlite3
</code></p>

<blockquote><p>Note that the filename (<code>*.sqlite</code>) may differ from your setup. In my case for example, it should match files with <code>*.gnucash</code>.</p></blockquote>

<p>And that&#39;s about it! The next time you run <code>git diff</code> or any other command that produces a diff on a sqlite file, you&#39;ll see a nicely formatted diff of the changes.</p>

<h3>Source</h3>

<p>https://stackoverflow.com/a/21789167</p>

<hr/>

<p>This is post 084 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Organizing multiple Git identities
            </title>
            <guid>
                https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities
            </guid>
            <link>
                https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities?utm_source=rss
            </link>
            <pubDate>
                Fri, 13 Oct 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>Here&#39;s a quick tip on how to manage multiple Git identities (e.g. personal, work, client1, client2).</p>

<p>I organize my Git repos in three levels. My personal projects live in a <code>~/sources</code> directory. All my work projects live in <code>~/work</code>. This is the first level.</p>

<p>Level 2 is the client, e.g. <code>~/work/client1</code>. Naturally, level 3 is the project repository: <code>~/work/client1/foo-api</code>.</p>

<p>This is how my work directory is organized:</p>

<p><code>
/Users/garrit/work
├── client1
│   ├── foo-api
│   ├── foo-ios
│   └── foo-android
└── client2
    ├── bar-ios
    └── bar-middleware
</code></p>

<p>Now, say that <code>client2</code> demands that we commit with a different identity than our default work email. Besides that, you probably also have a personal email address for your own projects. How do you manage that?</p>

<h2>.gitconfig includes</h2>

<p>The global configuration file for Git is <code>~/.gitconfig</code>. If you&#39;ve ever set a parameter like <code>git config user.name &quot;Foo Bar&quot;</code>: this is where it ended up.</p>

<p>One awesome feature of the .gitconfig file is that you can <strong>conditionally include other config files</strong>, and this is what does the trick. Here&#39;s my <code>~/.gitconfig</code> file:</p>

<p><code></code>`ini
[user]
    name = Garrit Franke
    email = garrit@slashdev.space</p>

<p>[includeIf &quot;gitdir:~/work/&quot;]
    path = ~/.gitconfig-work</p>

<p>[includeIf &quot;gitdir:~/work/client2/&quot;]
    path = ~/.gitconfig-client2</p>

<p>[includeIf &quot;gitdir:~/sources/&quot;]
    path = ~/.gitconfig-personal</p>

<h1>...</h1>

<p><code></code>`</p>

<p>By default, my name and email are always set to my personal identity. I also store some other global settings here, but those are not relevant for this post. If the repository is located inside the <code>~/work</code> directory, a file named <code>~/.gitconfig-work</code> is included. This is just another gitconfig file. This is what that looks like in my case:</p>

<p><code></code>`ini
[user]
    name = Garrit Franke
    signingkey = 12345678
    email = garrit@work.de</p>

<p>[commit]
    gpgsign = true
<code></code>`</p>

<p>I hope you&#39;ll see where this is going. For every identity, you keep a separate gitconfig file and include it in the main <code>~/.gitconfig</code>. Crucially, this requires you to organize your repositories grouped by client.</p>

<p>This trick has simplified my project onboarding quite a bit. No more &quot;You forgot to update your Email Address&quot; requests from clients!</p>

<hr/>

<p>This is post 083 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                🔗 Linkdump: Software Development
            </title>
            <guid>
                https://garrit.xyz/posts/2023-09-11-linkdump-software-development
            </guid>
            <link>
                https://garrit.xyz/posts/2023-09-11-linkdump-software-development?utm_source=rss
            </link>
            <pubDate>
                Mon, 11 Sep 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>Today, my feed is full of super interesting links. Here&#39;s a bunch of them, in no particular order. Some of them might be a bit older, but just as interesting:</p>

<ul><li><a href="https://henrikwarne.com/2023/09/10/what-i-have-changed-my-mind-about-in-software-development/">What I Have Changed My Mind About in Software Development</a></li><li><a href="https://littleblah.com/post/2019-09-01-senior-engineer-checklist/">A Senior Engineer&#39;s CheckList</a></li><li><a href="https://thoughtshrapnel.com/2023/09/11/the-burnout-curve/">The burnout curve</a></li><li><a href="https://staysaasy.com/engineering/2023/06/18/how-to-be-an-engineer-pms-down-hate.html">How To Be An Engineer That PMs Don&#39;t Hate</a></li><li><a href="https://www.allthingsdistributed.com/2023/07/building-and-operating-a-pretty-big-storage-system.html">Building and operating a pretty big storage system called S3</a></li><li><a href="https://pdx.su/blog/2023-07-26-tailwind-and-the-death-of-craftsmanship/">Tailwind, and the death of web craftsmanship</a></li><li><a href="https://taylor.town/entire-career">Man Spends Entire Career Mastering Crappy Codebase</a></li><li><a href="https://lukeplant.me.uk/blog/posts/no-one-actually-wants-simplicity/">No one actually wants simplicity</a></li></ul>

<hr/>

<p>This is post 077 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
    </channel>
</rss>