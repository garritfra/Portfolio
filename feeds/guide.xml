<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>
            garrit.xyz
        </title>
        <link>
            https://garrit.xyz
        </link>
        <description>
            Garrit Franke
        </description>
        <language>
            en
        </language>
        <lastBuildDate>
            Fri, 13 Oct 2023 00:00:00 +0000
        </lastBuildDate>
        <item>
            <title>
                Organizing multiple Git identities
            </title>
            <guid>
                https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities
            </guid>
            <link>
                https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities?utm_source=rss
            </link>
            <pubDate>
                Fri, 13 Oct 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>Here&#39;s a quick tip on how to manage multiple Git identities (e.g. personal, work, client1, client2).</p>

<p>I organize my Git repos in three levels. My personal projects live in a <code>~/sources</code> directory. All my work projects live in <code>~/work</code>. This is the first level.</p>

<p>Level 2 is the client, e.g. <code>~/work/client1</code>. Naturally, level 3 is the project repository: <code>~/work/client1/foo-api</code>.</p>

<p>This is how my work directory is organized:</p>

<p><code>
/Users/garrit/work
â”œâ”€â”€ client1
â”‚   â”œâ”€â”€ foo-api
â”‚   â”œâ”€â”€ foo-ios
â”‚   â””â”€â”€ foo-android
â””â”€â”€ client2
    â”œâ”€â”€ bar-ios
    â””â”€â”€ bar-middleware
</code></p>

<p>Now, say that <code>client2</code> demands that we commit with a different identity than our default work email. Besides that, you probably also have a personal email address for your own projects. How do you manage that?</p>

<h2>.gitconfig includes</h2>

<p>The global configuration file for Git is <code>~/.gitconfig</code>. If you&#39;ve ever set a parameter like <code>git config user.name &quot;Foo Bar&quot;</code>: this is where it ended up.</p>

<p>One awesome feature of the .gitconfig file is that you can <strong>conditionally include other config files</strong>, and this is what does the trick. Here&#39;s my <code>~/.gitconfig</code> file:</p>

<p><code></code>`ini
[user]
    name = Garrit Franke
    email = garrit@slashdev.space</p>

<p>[includeIf &quot;gitdir:~/work/&quot;]
    path = ~/.gitconfig-work</p>

<p>[includeIf &quot;gitdir:~/work/client2/&quot;]
    path = ~/.gitconfig-client2</p>

<p>[includeIf &quot;gitdir:~/sources/&quot;]
    path = ~/.gitconfig-personal</p>

<h1>...</h1>

<p><code></code>`</p>

<p>By default, my name and email are always set to my personal identity. I also store some other global settings here, but those are not relevant for this post. If the repository is located inside the <code>~/work</code> directory, a file named <code>~/.gitconfig-work</code> is included. This is just another gitconfig file. This is what that looks like in my case:</p>

<p><code></code>`ini
[user]
    name = Garrit Franke
    signingkey = 12345678
    email = garrit@work.de</p>

<p>[commit]
    gpgsign = true
<code></code>`</p>

<p>I hope you&#39;ll see where this is going. For every identity, you keep a separate gitconfig file and include it in the main <code>~/.gitconfig</code>. Crucially, this requires you to organize your repositories grouped by client.</p>

<p>This trick has simplified my project onboarding quite a bit. No more &quot;You forgot to update your Email Address&quot; requests from clients!</p>

<hr/>

<p>This is post 083 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Single Page Applications on GitHub Pages
            </title>
            <guid>
                https://garrit.xyz/posts/2023-06-01-single-page-applications-on-github-pages
            </guid>
            <link>
                https://garrit.xyz/posts/2023-06-01-single-page-applications-on-github-pages?utm_source=rss
            </link>
            <pubDate>
                Thu, 01 Jun 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>My latest project, <a href="https://sendpasswords.net/">sendpasswords.net</a> is a <a href="https://developer.mozilla.org/en-US/docs/Glossary/SPA">Single Page Application</a> deployed on GitHub Pages.</p>

<p>GitHub Pages is configured in a way to host static HTML files without any bells and whistles. This means that if you try to fetch a document that&#39;s <em>not</em> the index, for example <code>/foo</code>, the server will try to load the file with that name. </p>

<p>By nature, SPAs only consist of a single HTML entry point (<code>index.html</code> in most cases). It&#39;s responsible for routing the user to the correct page if there are multiple paths. And here&#39;s the crux: if the user tries to load <code>/foo</code>, he will not land at the SPA entry point. Instead, he will see a <code>404</code> error.</p>

<h2>The solution</h2>

<p>A <code>404</code> response will automatically return a file called <code>404.html</code>, which we can use to our advantage. After building the application, simply copy the <code>index.html</code> to <code>404.html</code>, as demonstrated by <a href="https://github.com/garritfra/sendpasswords.net/commit/66bdb68c229a3ac3386f7816a746155e658eb586">this commit</a>. This will use <code>index.html</code> to serve the application on the root level, and <code>404.html</code> to load <em>the same app</em> if the page doesn&#39;t exist as a file. Whether the <code>index.html</code> is needed if there&#39;s already a <code>404.html</code> is up to you. I left it in to make clear that this is just a workaround.</p>

<p>This is a <a href="https://stackoverflow.com/a/69308662/9046809">well known</a> workaround, but I wanted to bring some extra awareness to it, since it&#39;s a problem I ran into a couple of times so far. Happy SPAing!</p>

<hr/>

<p>This is post 069 (nice) of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Migrating Homeassistant from SD to SSD
            </title>
            <guid>
                https://garrit.xyz/posts/2023-04-27-migrating-homeassistant-from-sd-to-ssd
            </guid>
            <link>
                https://garrit.xyz/posts/2023-04-27-migrating-homeassistant-from-sd-to-ssd?utm_source=rss
            </link>
            <pubDate>
                Thu, 27 Apr 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>I finally got frustrated with the performance of my Raspberry Pi 4 running Homeassistant on a SD card, so I went ahead and got an SSD.</p>

<p>The migration was <strong>very</strong> easy:</p>

<ol><li>Create and download a full backup through the UI</li><li>Flash Homeassistant onto the SSD</li><li>Remove the SD card and plug the SSD into a USB 3.0 port of the Pi</li><li>Boot</li><li>Go through the onboarding procedure</li><li>Restore Backup</li><li>Profit</li></ol>

<p>It worked like a charm! The speed has improved A LOT, and everything was set up as it should be. </p>

<p>...Until we turned on the lights in the livingroom. My ZigBee-dongle, plugged into another USB port, wasn&#39;t able to communicate with the devices on the network.</p>

<p>After some digging around, I came across several threads stating that an SSD over USB 3.0 apparently creates a lot of interference to surrounding hardware, including my ZigBee dongle. The fix was simple: either get an extension port for the dongle, or plug the SSD into a USB 2.0 port of the Pi. Since I didn&#39;t have an extension cord to get the dongle far away enough from the SSD, I went with the latter option for now. And that fixed it! The performance was much worse, but still better than the SD I used before. My next step will be to grab an extension cord from my parents. I&#39;m sure they won&#39;t mind.</p>

<p>I hope this helps!</p>

<hr/>

<p>This is post 066 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Instant dark theme
            </title>
            <guid>
                https://garrit.xyz/posts/2023-04-12-instant-dark-theme
            </guid>
            <link>
                https://garrit.xyz/posts/2023-04-12-instant-dark-theme?utm_source=rss
            </link>
            <pubDate>
                Wed, 12 Apr 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>Thanks to <a href="https://jacksonchen666.com/">Jacksons</a> <a href="https://github.com/garritfra/darktheme.club/pull/79">update to darktheme.club</a>, I just came across a neat little <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme">CSS property</a> that turns a mostly CSS-free document into a pleasantly dark site:</p>

<p><code>css
:root {
  color-scheme: light dark;
}
</code></p>

<p>This will adjust all elements on the page to the color scheme preferred by the user - without any other custom styles! ðŸ¤¯ It is also <a href="https://caniuse.com/mdn-css_properties_color-scheme">widely supported</a> by browsers.</p>

<p>I&#39;ve always been quite dependent on CSS-frameworks for any project I&#39;m starting. Going forward, I&#39;d be interested to see how framework-less sites would feel using this property. If all else fails, there&#39;s always the awesome <a href="https://simplecss.org/">simple.css</a> library, which you can slap on top of a raw document to make it pretty (and dark, if preferred) without using custom classes.</p>

<hr/>

<p>This is post 064 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Designing resilient cloud infrastructure
            </title>
            <guid>
                https://garrit.xyz/posts/2023-03-30-designing-resilient-cloud-infrastructure
            </guid>
            <link>
                https://garrit.xyz/posts/2023-03-30-designing-resilient-cloud-infrastructure?utm_source=rss
            </link>
            <pubDate>
                Thu, 30 Mar 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>As mentioned in a <a href="/posts/2023-03-16-terraform-project-learnings">previous post</a>, I&#39;m currently finishing up building my first cloud infrastructure on AWS for a client at work. During the development, I learned a lot about designing components to be resilient and scalable. Here are some key takeaways.</p>

<p>One of the most critical components of a resilient infrastructure is redundancy. On AWS, you place your components inside a &quot;region&quot;. This could be <code>eu-central-1</code> (Frankfurt) or <code>us-east-1</code> (North Virgina), etc. To further reduce the risk of an outage, each region is divided into multiple <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Availability Zones</a> (AZs). The AZs of a region are usually located some distance apart from each other. In case of a flood, a fire or a bomb detonating near one AZ, the other AZs should in most cases still be intact. You should have at least two, preferably three replicas of each component across multiple availability zones in a region. By having replicas of your components in different availability zones, you reduce the risk of downtime caused by an outage in a single availability zone.</p>

<p>Another way to ensure scalability and resilience for your database is to use <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Aurora Serverless v2</a>. This database service is specifically designed for scalable, on-demand, and cost-effective performance. The database scales itself up or down based on the workload, which allows you to automatically and dynamically adjust the database capacity to meet the demand of your application, ensuring that your application is responsive and performs well without the need for manual intervention. Adding Serverless instances to an existing RDS cluster is also a seemless proccess.</p>

<p>In addition to switching to Aurora Serverless v2, using read replicas for cache and database in a separate availability zone can act as a hot standby without extra configuration. Keep in mind that read replicas are only utilized by explicitly using the read-only endpoint of a cluster. But even if you&#39;re only using the &quot;main&quot; cluster endpoint (and therefore just the primary instance), a read replica can promote itself to the primary instance in case of a fail over, which drastically reduces downtime.</p>

<p>When using Amazon Elastic Container Service (ECS), use Fargate as opposed to EC2 instances. Fargate is a serverless compute engine for containers that allows you to run containers without having to manage the underlying infrastructure. It smartly locates instances across availability zones, ensuring that your application is always available.</p>

<p>In conclusion, you should always ensure that there are more than one instance of a component in your infrastructure. There are also services on AWS that abstract away the physical infrastructure (Fargate, S3, Lambda) and use a multi-AZ pattern by default.</p>

<hr/>

<p>This is post 061 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Fullscreen Terminals in VSCode
            </title>
            <guid>
                https://garrit.xyz/posts/2023-03-23-fullscreen-terminals-in-vscode
            </guid>
            <link>
                https://garrit.xyz/posts/2023-03-23-fullscreen-terminals-in-vscode?utm_source=rss
            </link>
            <pubDate>
                Thu, 23 Mar 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>I often find myself using a &quot;real&quot; terminal alongside my VSCode setup, because for some tasks the built-in terminal, due to its small size, is quite flimsy to use. <em>But</em>! I just found out there&#39;s a a way to switch the terminal into fullscreen mode, using the &quot;View: Toggle Maximized Panel&quot; command.</p>

<p>You can bind it to a shortcut, which makes switching between editor and terminal a breeze! Simply add this to your <code>keybindings.json</code> (also accessible via the <a href="https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette">command palette</a>):</p>

<p><code>
    {
        &quot;key&quot;: &quot;cmd+alt+m&quot;,
        &quot;command&quot;: &quot;workbench.action.toggleMaximizedPanel&quot;
    }
</code></p>

<h3>References</h3>

<ul><li><a href="https://stackoverflow.com/a/48512128/9046809">Original StackOverflow answer</a></li></ul>

<hr/>

<p>This is post 059 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Debugging ECS Tasks
            </title>
            <guid>
                https://garrit.xyz/posts/2023-03-10-debugging-ecs-tasks
            </guid>
            <link>
                https://garrit.xyz/posts/2023-03-10-debugging-ecs-tasks?utm_source=rss
            </link>
            <pubDate>
                Fri, 10 Mar 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>I just had to debug an application on AWS ECS. The whole procedure is documented in more detail in the <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-exec.html">documentation</a>, but I think it&#39;s beneficial (both for my future self and hopefully to someone out there) to write down the proccess in my own words.</p>

<p>First of all, you need access to the cluster via the <a href="https://aws.amazon.com/de/cli/">CLI</a>. In addition to the CLI, you need the <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html">AWS Session Manager plugin for the CLI</a>. If you&#39;re on MacOS, you can install that via <a href="https://formulae.brew.sh/cask/session-manager-plugin">Homebrew</a>:</p>

<p><code>
brew install --cask session-manager-plugin
</code></p>

<p>Next, you need to allow the task you want to debug to be able to execute commands. Since I&#39;m using Terraform, this was just a matter of adding the <a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_service#enable_execute_command"><code>enable_execute_command</code></a> attribute to the service:</p>

<p><code>tf
resource &quot;aws_ecs_service&quot; &quot;my_service&quot; {
  name            = &quot;my-service&quot;
  cluster         = aws_ecs_cluster.my_cluster.id
  task_definition = aws_ecs_task_definition.my_task_definition.id
  desired_count   = var.app_count
  launch_type     = &quot;FARGATE&quot;
  enable_execute_command = true # TODO: Disable after debugging
}
</code></p>

<p>You may also need specify an execution role in the task definition:</p>

<p><code>tf
resource &quot;aws_ecs_task_definition&quot; &quot;my_task_definition&quot; {
  family              = &quot;my-task&quot;
  task_role_arn       = aws_iam_role.ecs_task_execution_role.arn
  execution_role_arn  = aws_iam_role.ecs_task_execution_role.arn  # &lt;-- Add this
}
</code></p>

<p>Make sure that this role has the correct access rights. There&#39;s a nice <a href="https://aws.amazon.com/de/premiumsupport/knowledge-center/ecs-error-execute-command/">troubleshooting guide</a> going over the required permissions.</p>

<p>If you had to do some modifications, make sure to roll out a new deployment with the fresh settings:</p>

<p><code>
aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment
</code></p>

<p>Now, you should be able to issue commands against any running container!</p>

<p><code>
aws ecs execute-command --cluster westfalen --task &lt;task-id-or-arn&gt; --container my-container --interactive --command=&quot;/bin/sh&quot;
</code></p>

<p>I hope this helps!</p>

<hr/>

<p>This is post 055 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Visual Distractions
            </title>
            <guid>
                https://garrit.xyz/posts/2023-02-24-visual-distractions
            </guid>
            <link>
                https://garrit.xyz/posts/2023-02-24-visual-distractions?utm_source=rss
            </link>
            <pubDate>
                Fri, 24 Feb 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>Everywhere we look, we&#39;re bombarded with flashy symbols trying to grab our attention. This is even the case where we <strong>think</strong> that we&#39;re in control of what we&#39;re looking at. I made two simple changes that reduce visual distractions in my life.</p>

<h2>Android App Icons</h2>

<p>App icons play a serious role in how we interact with our phone. Over the years, there has been a constant battle for the most flashy icon on our home screen. But there&#39;s a cure: newer versions of Android <a href="https://www.lifewire.com/change-color-of-apps-on-android-phones-5213663">let you choose a color theme for apps that implement it</a>. It&#39;s by far not supported by every app out there, but in my case 90% of the app icons now have the same color. I feel way more comfortable looking at my phone, knowing that less things are trying to grab my attention right when I unlock my phone.</p>

<p>With this change, I found that I am more mindful about what app icon I tap on, since I was used to each icon having a different color. This makes it harder for my muscle memory to develop bad habits.</p>

<h2>RSS-Reader Favicons</h2>

<p>If you&#39;re using an RSS reader, chances are you&#39;re used to seeing a favicon next to the articles. I had the feeling that I was drawn more towards the favicon than the headline of the article, so I started looking for ways to disable favicons all together.</p>

<p>Miniflux provides a way to override the stylesheet of the feed in the settings. Simply append the following code-snippet and the favicons will be history:</p>

<p><code>css
.item-title img, .entry-website img {
  display: none;
}
</code></p>

<p>Of course every reader is different, so you might want to look into the documentation of your reader of choice.</p>

<h2>Conclusion</h2>

<p>These changes might seem insignificant, but I found that they made a huge difference in how I interact with my phone. The suggestions above might not apply to your life, but I&#39;d like to encourage you to keep an eye out for unnecessary visual distraction in your life. Try to avoid it as much as possible.</p>

<hr/>

<p>This is post 051 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                6 ways you can contribute to open knowledge right now
            </title>
            <guid>
                https://garrit.xyz/posts/2022-12-05-contributing-to-open-source-knowledge
            </guid>
            <link>
                https://garrit.xyz/posts/2022-12-05-contributing-to-open-source-knowledge?utm_source=rss
            </link>
            <pubDate>
                Mon, 05 Dec 2022 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>I wrote the initial draft for this post a few months ago, traveling through
Norway in a rented campervan. While roaming the beautiful landscapes, I spent a
lot of time thinking. Reading books while traveling really is the best way to
find new inspiration.</p>

<p>On our trip, we wanted to try out an alternative to Google Maps. Most of the
OpenStreetMap-based apps lack important features, but we recently stumbled upon
<a href="https://www.magicearth.com/">MagicEarth</a>, which perfectly fills the void.
OpenStreetMap has been 95% accurate for us. Those last 5% are mostly less famous
hiking trails and attractions that could easily be filled in by people like you
and me. This inspired me to write this blog post, where I share six ways that
you can contribute to open source knowledge right now.</p>

<h2>OpenStreetMap</h2>

<p>As mentioned above, I spotted some minor inconsistencies in
<a href="https://openstreetmap.org">OpenStreetMap</a> while driving through Norway. We
tracked our hikes with an app that is able to export a GPX file, which can be
imported to OpenStreetMap to check if the trail matches (or if it is missing),
and took note of incorrect or sloppy roads/buildings. Back home, I plan to sit
down and fix up those issues.</p>

<p>But you don&#39;t have to be on a roadtrip to contribute to OpenStreetMap! Chances
are you know your local surroundings pretty well. Just navigate to your
neighborhood and see what could be improved. Maybe you know a public toilet, a
park or a secret road that is not shown on the map? As a matter of fact, my
private address was missing, so I added it via the editor. I can now use any of
the many OpenStreetMap-based apps to navigate home!</p>

<h2>Wikipedia (and other wikis)</h2>

<p>I often feel like I can&#39;t contribute much to the vast knowledge of Wikipedia.
<em>Other people are way smarter than me</em> and whatnot. But while you might not be
able to publish worthy edits to a well-known topic, you might know some things
that others haven&#39;t thought of. Is there an entry about your local town? Is
there an interesting member of your (past) family that others might want to read
about?</p>

<p>Of course, there are other wikis beside Wikipedia. Are you using a little-known
tool that has open source documentation in the form of a wiki? How can it be
improved?</p>

<h2>Observation</h2>

<p>You might have never heard of <a href="https://observation.org">observation.org</a>. It&#39;s
an open biodiversity- and nature-database. I just recently learned about them in
our local museum. They had a special exhibition about insects, and called out
for contributions to map out our local flora and fauna.</p>

<p>The idea is simple: snap a picture of an interesting looking insect or plant,
upload it using the website (or one of their apps) and create an &quot;observation&quot;.
Using this information, researchers will be able to understand the biodiversity
of your area. The information is free to use, and anyone can contribute!</p>

<h2>Wardriving</h2>

<p>Wardriving is a fun and useful way to contribute to open source knowledge. By
driving around with a device that can detect and record wireless networks, you
can help to map out the wireless coverage in your area. This information can be
used by researchers, network operators, and other interested parties to
understand the availability and quality of wireless networks.</p>

<p>One popular tool for wardriving is <a href="https://wigle.net/">WiGLE</a>. WiGLE allows you
to easily collect and share information about wireless networks, and contribute
to the global wireless map. To get started with WiGLE, you will need a device
that can detect and record wireless networks. This can be a smartphone, laptop,
or dedicated wardriving device. You will also need to download and install the
WiGLE app, and some basic knowledge of how to use it.</p>

<p>Once you have set up WiGLE, you can start driving around and mapping out the
wireless networks in your area. As you collect data, it will be automatically
uploaded to the WiGLE database, where it can be used by researchers and other
interested parties. Wardriving with WiGLE is a fun and easy way to help advance
scientific research and understanding.</p>

<h2>folding@home</h2>

<p>Another way to contribute to open source knowledge is to participate in the
<a href="https://foldingathome.org/">folding@home</a> project. folding@home is a
distributed computing project that uses the idle processing power of volunteers&#39;
computers to perform scientific calculations and simulations. These calculations
are used to study a wide range of topics, including protein folding, drug
design, and the origins of the universe.</p>

<p>By joining the folding@home network, you can help to advance scientific research
and discovery. The project is open to anyone, and you can participate using your
personal computer, laptop, or even your smartphone. All you need to do is
download and install the folding@home software, and then select the types of
calculations that you want to contribute to.</p>

<p>The folding@home project is a great way to put your idle computing power to good
use, and to contribute to the global effort to advance scientific knowledge. To
learn more, visit the <a href="https://foldingathome.org/">folding@home website</a>.</p>

<h2>Blog posts</h2>

<p>Writing a blog post is a fun and engaging way to contribute to open source
knowledge. You don&#39;t need to be a professional writer or have a formal writing
style. Just jot down some notes about a topic that you are passionate about, and
share your experiences and expertise with others.</p>

<p>Not only will you be helping others to learn from your experiences, but writing
a blog post can also be beneficial for yourself. Capturing your thoughts and
ideas in writing can help you to better understand and organize your own
knowledge. It can also be a great way to reflect on your experiences and to
learn from your successes and failures.</p>

<p>If you&#39;re interested in blogging, you might want to check out the
<a href="https://100daystooffload.com/">100DaysToOffload</a> project!</p>

<h1>Wrapping up</h1>

<p>As you can see, there are many ways that you can contribute to open source
knowledge, even if you don&#39;t have a lot of time or expertise. By participating
in projects like OpenStreetMap, Wikipedia, observation.org, and folding@home, or
by sharing your experiences and expertise through blog posts, you can make a
real difference in the community.</p>

<p>Why not give it a try? You might be surprised by how much you can learn and how
much you can help others. And who knows, you might even have some fun along the
way! Thanks for reading, and happy contributing!</p>

<p>This is post 044 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                A simple guestbook
            </title>
            <guid>
                https://garrit.xyz/posts/2022-10-05-simple-guestbook
            </guid>
            <link>
                https://garrit.xyz/posts/2022-10-05-simple-guestbook?utm_source=rss
            </link>
            <pubDate>
                Wed, 05 Oct 2022 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<blockquote><p><strong>TL;DR</strong>: Click <a href="/guestbook">here</a> to view the guestbook.</p></blockquote>

<p>For a while now, I wanted to have a quick way to update the pages on my website.</p>

<p>GitHub has the
<a href="https://docs.github.com/en/get-started/using-github/keyboard-shortcuts#source-code-editing">&quot;.&quot;</a>
hotkey, which opens a web based editor for the file you&#39;re currently viewing.
This site now has this feature as well! To try it out, just hit <code>.</code>, and you&#39;ll
be redirected to the file editor for this page.</p>

<p>To see how I implemented this feature, you take a look at
<a href="https://github.com/garritfra/garrit.xyz/commit/658efa3a3ebfebebbf74d0eb6aae6c1cc9566516">this</a>
commit. It boils down to this snippet of code:</p>

<p><code></code><code>js
window.addEventListener(&quot;keypress&quot;, (e) =&gt; {
	if (e.key === &quot;.&quot;) {
		const baseUrl = &quot;https://github.com/garritfra/garrit.xyz/edit/main/content&quot;;
		const filePath = window.location.pathname;
		const url = </code>${baseUrl}${filePath}.md`;</p>

<pre><code>	window.location.href = url;
}</code></pre>

<p>});
<code></code>`</p>

<p>Pretty simple, huh?</p>

<p>Since this doesn&#39;t work on mobile devices, I also added <a href="https://github.com/garritfra/garrit.xyz/commit/8c374a8bc0b66192c454300489fee52e7299c9dd#diff-2cbafea0c9dff483ebab9ad670b1cdb3eb7aac552f9c161e42fee84c2efe3a69">a custom 404
page</a>
which also redirects to the editor, if the filepath ends with in <code>/edit</code>.</p>

<p>Let&#39;s have some fun and put this feature to use. I added a simple
<a href="/guestbook">guestbook</a> to this site, which is open to receive pull requests.
I&#39;d love to hear from you!</p>

<p>This is post 040 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
    </channel>
</rss>