<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>
            garrit.xyz
        </title>
        <link>
            https://garrit.xyz
        </link>
        <description>
            Garrit Franke
        </description>
        <language>
            en
        </language>
        <lastBuildDate>
            Tue, 30 Jan 2024 00:00:00 +0000
        </lastBuildDate>
        <item>
            <title>
                To prove something is true, try disproving it first
            </title>
            <guid>
                https://garrit.xyz/posts/2024-01-30-to-prove-something-is-true-try-disproving-it-first
            </guid>
            <link>
                https://garrit.xyz/posts/2024-01-30-to-prove-something-is-true-try-disproving-it-first?utm_source=rss
            </link>
            <pubDate>
                Tue, 30 Jan 2024 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>We&#39;ve been taught that, to prove that a thing is true, we should point out what&#39;s true about it.</p>

<p>However, we can learn much more about why something is true by trying to <strong>disprove</strong> it first. If you think something is true, try as hard as you can to prove that it&#39;s false.</p>

<p>Disproving a theory is core to the <a href="https://en.wikipedia.org/wiki/Scientific_method">scientific method</a>. Only when we validate that something cannot be false, we come closer to proving that it&#39;s true.</p>

<h2>Source</h2>

<p>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/vKA4w2O61Xo?si=2dtApWo8JmHOwqff&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;/iframe&gt;</p>]]>
            </description>
        </item>
        <item>
            <title>
                Another reason why you can't divide by zero
            </title>
            <guid>
                https://garrit.xyz/posts/2023-12-19-another-reason-you-can-t-divide-by-zero
            </guid>
            <link>
                https://garrit.xyz/posts/2023-12-19-another-reason-you-can-t-divide-by-zero?utm_source=rss
            </link>
            <pubDate>
                Tue, 19 Dec 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>So, I recently wrote about [why you can&#39;t divide by zero](/posts/2023-11-30-why-you-can&#39;t-divide-by-zero). In that post, I argued that dividing a number by zero breaks the rules of <a href="https://en.m.wikipedia.org/wiki/Inverse_function">inverse functions</a>. Of course that&#39;s not the only way to prove that the result of dividing a number by zero is not defined, so here&#39;s another.</p>

<p>If you approach the number zero from some arbitrary number as the divisor, you will find that the result is getting larger and larger: <code>1 / 1 = 1</code>, <code>1 / 0.5 = 2</code>, <code>1 / 0.1 = 10</code> and so on. If we keep dividing by smaller numbers, the result will get bigger and bigger. It&#39;s obvious that if we go all the way down to zero as the divisor, we will see infinity as the result, right? Well, no.</p>

<p>Let&#39;s flip this around and start from a negative number, going up towards the number zero: <code>1 / -1 = -1</code>, <code>1 / -0.5 = -2</code>, <code>1 / -0.1 = -10</code>. As you can see, the numbers are getting <strong>smaller</strong>, the more we approach the number zero! This shows that the results differ if we change the perspective on the problem. The result cannot be defined.</p>

<p>After writing the first post on this topic, I honestly didn&#39;t realize how complex this seemingly simple problem is. I&#39;m not a mathematician, but I&#39;m starting to like maths. Fascinating stuff!</p>

<hr/>

<p>This is post 096 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Overcoming "air hunger"
            </title>
            <guid>
                https://garrit.xyz/posts/2023-12-18-overcoming-air-hunger
            </guid>
            <link>
                https://garrit.xyz/posts/2023-12-18-overcoming-air-hunger?utm_source=rss
            </link>
            <pubDate>
                Mon, 18 Dec 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>For as long as I can remember, I often had the feeling of not being able to get a full breath. I&#39;m taking deep breaths and sometimes forcing a yawn to overcome this feeling, sometimes successful, sometimes failing and trying again. This feeling gets worse the more I focus on my breath.</p>

<p>I always felt like this is somewhat uncommon, since none of my friends and family can relate to this feeling, but it wasn&#39;t worse enough to justify consulting a doctor about it either.</p>

<p>Doing some research, it seems like this phenomenon is called <a href="https://en.m.wikipedia.org/wiki/Shortness_of_breath">dyspnea</a>, or &quot;air hunger&quot;. Some guy even made <a href="https://airhunger.org/">a website</a> about it. In a nutshell, it is caused by your body not being able to regulate carbon levels in your blood, which leads to an urge to breath unnaturally.</p>

<p>In a <a href="https://m.youtube.com/watch?v=XliOGg8Tl98">video</a>, the author points out that this might be caused by irregular breathing patterns. Indeed, I often find myself breathing through the mouth or sitting in awkward positions with a humpback when the symptoms are at its worst. In fact, what led me to look this up was because I was annoyed by the feeling while I&#39;m laying in bed staring down at my screen, which is a very unnatural position.</p>

<p>A simple trick to get into a more regular breathing pattern is apparently to force yourself to breathe through the nose. Mouth breathing lets your body take in way more air than you need, which throws off the balance of the carbon levels in your lungs.</p>

<p>It seems like nose breathing does work very well. Where I&#39;ve just been struggling with air hunger, once I forced myself to nose breathe, the urge to breathe doesn&#39;t come nearly as often anymore.</p>

<p>These are just my results after some quick research. The topic of short breathing seems to be quite broad. Perhaps you&#39;re struggling with this as well. In that case, I hope this post was helpful to you!</p>

<hr/>

<p>This is post 095 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Formula E is essentially Mario Kart
            </title>
            <guid>
                https://garrit.xyz/posts/2023-12-11-formula-e-is-essentially-mario-kart
            </guid>
            <link>
                https://garrit.xyz/posts/2023-12-11-formula-e-is-essentially-mario-kart?utm_source=rss
            </link>
            <pubDate>
                Mon, 11 Dec 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>I never actively watched a Formula E race, let alone Formula 1. Racing just isn&#39;t on my radar. However, I just came across <a href="https://www.youtube.com/watch?v=En-__5ewnAk">this</a> video about the driving style in Formula E races, and I was instantly hooked. Formula E is basically Mario Kart.</p>

<p>In a race, drivers can enter a so called &quot;attack mode&quot;, in which they can leave the optimal route in a turn to activate a significant power burst for a short while.</p>

<p><img alt="grafik" src="https://github.com/garritfra/garrit.xyz/assets/32395585/712c8317-a669-4a20-8d29-c746aea54392"/></p>

<p>Sound familiar? You bet!</p>

<p><img alt="grafik" src="https://github.com/garritfra/garrit.xyz/assets/32395585/22c8cf0f-6ac4-491d-8814-a24f937ec3a7"/></p>

<p>Additionally, drivers have the strategic option to &quot;hyperboost&quot; for some time. During a race, the drivers have to balance speed and efficiency. If your battery is empty, you&#39;re out of the race. The cars usually don&#39;t drive with full power to conserve energy, until the &quot;hyperboost&quot; is activated. So thinking about <strong>when</strong> to overtake a car plays a huge strategic role. Does that ring a bell?</p>

<p><img alt="grafik" src="https://github.com/garritfra/garrit.xyz/assets/32395585/18b326c6-e4db-495e-8cfb-1039f9c39691"/></p>

<p>Formula 1 cars generate <strong>a lot</strong> of data which is analyzed by the pit to predict tire wear, fuel usage, weather conditions and so on. In Formula E, no data is streamed to the pit at all. It&#39;s entirely up to the skill of the driver to make decisions. Again, just like in Mario Kart.</p>

<p>Although I have no stakes in car races whatsoever, I was blown away by this video about Formula E. If you liked this post, I suggest you <a href="https://www.youtube.com/watch?v=En-__5ewnAk">watch it by yourself</a> and let it be explained by an expert.</p>

<hr/>

<p>This is post 092 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Why you can't divide by zero
            </title>
            <guid>
                https://garrit.xyz/posts/2023-11-30-why-you-can't-divide-by-zero
            </guid>
            <link>
                https://garrit.xyz/posts/2023-11-30-why-you-can't-divide-by-zero?utm_source=rss
            </link>
            <pubDate>
                Thu, 30 Nov 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>I&#39;ve always been wondering why dividing by zero is considered undefined. My intuitive answer would have always been &quot;infinity&quot; or &quot;zero&quot;. I just had a discussion about this with a collegue who happens to have a degree in mathematics, and the way they explained it made it absolutely clear why it doesn&#39;t make sense to divide by zero.</p>

<h2>Inverse Operations</h2>

<p>Before understanding why dividing by zero is undefined, you first need to know about inverse operations. It&#39;s quite simple!</p>

<p>An example: <code>3 + 2 = 5</code>. The inverse of addition is <em>subtraction</em>, so the inverse of this equation is <code>5 - 2 = 3</code> or <code>5 - 3 = 2</code>.</p>

<p>The same applies to multiplication. The inverse of multiplation is <em>division</em>. So the inverse of <code>6 * 2 = 12</code> is <code>12 / 2 = 6</code> or <code>12 / 6 = 2</code>.</p>

<h2>Dividing by zero</h2>

<p>Let&#39;s try to apply the inverse rule to the number zero, starting with addition. If <code>2 + 0 = 2</code>, then <code>2 - 0 = 2</code>.</p>

<p>But if we have <code>2 * 0 = 0</code>, the inverse of that would be <code>0 / 0 = 2</code>, which is just not true.</p>

<p>Dividing by zero breaks some fundamental laws of mathematics, which is why there&#39;s a general consensus that any equasion dividing by zero has no valid answer.</p>

<hr/>

<p>This is post 090 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Tracking SQLite Database Changes in Git
            </title>
            <guid>
                https://garrit.xyz/posts/2023-11-01-tracking-sqlite-database-changes-in-git
            </guid>
            <link>
                https://garrit.xyz/posts/2023-11-01-tracking-sqlite-database-changes-in-git?utm_source=rss
            </link>
            <pubDate>
                Wed, 01 Nov 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<blockquote><p><strong>Note</strong>: This post stirred up some interesting discussions on <a href="https://news.ycombinator.com/item?id=38110286">HackerNews</a> and <a href="https://lobste.rs/s/gnv9ho/tracking_sqlite_database_changes_git">Lobste.rs</a>.</p></blockquote>

<p>SQLite stores data in binary. If you run <code>cat mydb.sqlite</code>, you&#39;ll see a bunch of gibberish that doesn&#39;t resemble structured data at all. If you want to track changes and updates to a database using Git, you won&#39;t be able to see full diffs by default. You&#39;ll see that the file has changed, but not what changed exactly:</p>

<p><code>diff
diff --git a/mydb.sqlite b/mydb.sqlite
index f412c72..8f49ea5 100644
Binary files a/mydb.sqlite and b/mydb.sqlite differ
</code></p>

<p>So, is there a way around that? Turns out: there is! Here&#39;s a diff between two states of the SQLite database of <a href="https://www.gnucash.org/index.phtml">GnuCash</a>, which I&#39;m currently trying out to manage my finances. I&#39;ll explain how I got this diff afterwards:</p>

<p><code>diff
diff --git a/garritfranke.gnucash b/garritfranke.gnucash
index f412c72..8f49ea5 100644
--- a/garritfranke.gnucash
+++ b/garritfranke.gnucash
@@ -100,18 +100,22 @@ INSERT INTO accounts VALUES(&#39;ca11987c1c804da4b47b70d0fda87f10&#39;,&#39;Strom&#39;,&#39;EXPENSE&#39;
 INSERT INTO accounts VALUES(&#39;b1674455d6ec495c8898bcfb65ef100c&#39;,&#39;Template Root&#39;,&#39;ROOT&#39;,NULL,0,0,NULL,&#39;&#39;,&#39;&#39;,0,0);
+INSERT INTO accounts VALUES(&#39;9d2959ea65fc4f29b02dbc593fa9598a&#39;,&#39;Ausgleichskonto-EUR&#39;,&#39;BANK&#39;,&#39;26cc1292cf3e4f9584c71e7b3ec28479&#39;,100,0,&#39;39e1c61538e24572abfcf0f3f72022ac&#39;,&#39;&#39;,&#39;&#39;,0,0);
 CREATE TABLE budgets(guid text(32) PRIMARY KEY NOT NULL, name text(2048) NOT NULL, description text(2048), num_periods integer NOT NULL);
 CREATE TABLE prices(guid text(32) PRIMARY KEY NOT NULL, commodity_guid text(32) NOT NULL, currency_guid text(32) NOT NULL, date text(19) NOT NULL, source text(2048), type text(2048), value_num bigint NOT NULL, value_denom bigint NOT NULL);
 CREATE TABLE transactions(guid text(32) PRIMARY KEY NOT NULL, currency_guid text(32) NOT NULL, num text(2048) NOT NULL, post_date text(19), enter_date text(19), description text(2048));
+INSERT INTO transactions VALUES(&#39;db9eff5ec00145f293c85391becbefa8&#39;,&#39;26cc1292cf3e4f9584c71e7b3ec28479&#39;,&#39;&#39;,&#39;2023-11-01 10:59:00&#39;,&#39;2023-11-01 11:36:23&#39;,&#39;TEST&#39;);
 INSERT INTO splits VALUES(&#39;e45aeb0ac0274c6483f8deb2e7ad3743&#39;,&#39;10cecb081ac24ab5a369c93f96d293da&#39;,&#39;d229160352064f8c80090e0a10a57d9c&#39;,&#39;&#39;,&#39;Rechnung&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,0,100,0,100,NULL);
 INSERT INTO splits VALUES(&#39;bb9d2818bdc14be9bb916f3efd82e77d&#39;,&#39;10cecb081ac24ab5a369c93f96d293da&#39;,&#39;1d93d1e67aed4320bb228c16f4e28092&#39;,&#39;&#39;,&#39;Rechnung&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,25000,100,25000,100,&#39;b94c643ddcda48bcb7fc58626452e825&#39;);
 INSERT INTO splits VALUES(&#39;62747f45556740fe836c9f2180fe70c9&#39;,&#39;10cecb081ac24ab5a369c93f96d293da&#39;,&#39;4d6616d8c6524ead86641559539caf50&#39;,&#39;&#39;,&#39;Rechnung&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,-25000,100,-25000,100,NULL);
+INSERT INTO splits VALUES(&#39;029f58c4d85c497c8e06ad4e52090033&#39;,&#39;db9eff5ec00145f293c85391becbefa8&#39;,&#39;a0f46eb546e34555ab4d0d3cc32c320f&#39;,&#39;&#39;,&#39;&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,-10000,100,-10000,100,NULL);
+INSERT INTO splits VALUES(&#39;433a48cfdd314c94a105b5db9e7839de&#39;,&#39;db9eff5ec00145f293c85391becbefa8&#39;,&#39;9d2959ea65fc4f29b02dbc593fa9598a&#39;,&#39;&#39;,&#39;&#39;,&#39;n&#39;,&#39;1970-01-01 00:00:00&#39;,10000,100,10000,100,NULL);
 CREATE TABLE slots(id integer PRIMARY KEY AUTOINCREMENT NOT NULL, obj_guid text(32) NOT NULL, name text(4096) NOT NULL, slot_type integer NOT NULL, int64_val bigint, string_val text(4096), 
 INSERT INTO slots VALUES(84,&#39;d9d25d75a993434597d988baa65670bb&#39;,&#39;job-rate&#39;,3,0,NULL,NULL,&#39;1970-01-01 00:00:00&#39;,NULL,250,1,NULL);
 INSERT INTO slots VALUES(85,&#39;38cde72240424e8b9e3ab5d4852c9cf0&#39;,&#39;job-rate&#39;,3,0,NULL,NULL,&#39;1970-01-01 00:00:00&#39;,NULL,100,1,NULL);
+INSERT INTO slots VALUES(88,&#39;db9eff5ec00145f293c85391becbefa8&#39;,&#39;date-posted&#39;,10,0,NULL,NULL,&#39;1970-01-01 00:00:00&#39;,NULL,0,1,&#39;20231101&#39;);
 CREATE TABLE recurrences(id integer PRIMARY KEY AUTOINCREMENT NOT NULL, obj_guid text(32) NOT NULL, recurrence_mult integer NOT NULL, recurrence_period_type text(2048) NOT NULL, recurrence_period_start text(8) NOT NULL, recurrence_weekend_adjust text(2048) NOT NULL);
 CREATE TABLE schedxactions(guid text(32) PRIMARY KEY NOT NULL, name text(2048), enabled integer NOT NULL, start_date text(8), end_date text(8), last_occur text(8), num_occur integer NOT NULL, rem_occur integer NOT NULL, auto_create integer NOT NULL, auto_notify integer NOT NULL, adv_creation integer NOT NULL, adv_notify integer NOT NULL, instance_count integer NOT NULL, template_act_guid text(32) NOT NULL);
 CREATE TABLE lots(guid text(32) PRIMARY KEY NOT NULL, account_guid text(32), is_closed integer NOT NULL);
@@ -234,7 +239,7 @@ INSERT INTO taxtable_entries VALUES(3,&#39;1d459b285fca4de3bb4659744dc0cec5&#39;,&#39;d22916
 INSERT INTO taxtable_entries VALUES(5,&#39;6def0d3a788d414b818ecdb29ba3dcd1&#39;,&#39;d229160352064f8c80090e0a10a57d9c&#39;,0,100000,2);
 CREATE TABLE vendors(guid text(32) PRIMARY KEY NOT NULL, name text(2048) NOT NULL, id text(2048) NOT NULL, notes text(2048) NOT NULL, currency text(32) NOT NULL, active integer NOT NULL, tax_override integer NOT NULL, addr_name text(1024), addr_addr1 text(1024), addr_addr2 text(1024), addr_addr3 text(1024), addr_addr4 text(1024), addr_phone text(128), addr_fax text(128), addr_email text(256), terms text(32), tax_inc text(2048), tax_table text(32));
 DELETE FROM sqlite_sequence;
-INSERT INTO sqlite_sequence VALUES(&#39;slots&#39;,87);
+INSERT INTO sqlite_sequence VALUES(&#39;slots&#39;,88);
 INSERT INTO sqlite_sequence VALUES(&#39;taxtable_entries&#39;,5);
 CREATE INDEX tx_post_date_index ON transactions(post_date);
 CREATE INDEX splits_tx_guid_index ON splits(tx_guid);
</code></p>

<p>First, add a diff type called &quot;sqlite3&quot; to your config. The simplest way is to just run these commands:</p>

<p><code>shell
git config diff.sqlite3.binary true
git config diff.sqlite3.textconv &quot;echo .dump | sqlite3&quot;
</code></p>

<p>Alternatively, you can add this snippet to your <code>~/.gitconfig</code> or <code>.git/config</code> in your repository:</p>

<p><code>gitconfig
[diff &quot;sqlite3&quot;]
        binary = true
        textconv = &quot;echo .dump | sqlite3&quot;
</code></p>

<p>Next, create a file called <code>.gitattributes</code> if it&#39;s not already present and add this line:</p>

<p><code>gitattributes
*.sqlite diff=sqlite3
</code></p>

<blockquote><p>Note that the filename (<code>*.sqlite</code>) may differ from your setup. In my case for example, it should match files with <code>*.gnucash</code>.</p></blockquote>

<p>And that&#39;s about it! The next time you run <code>git diff</code> or any other command that produces a diff on a sqlite file, you&#39;ll see a nicely formatted diff of the changes.</p>

<h3>Source</h3>

<p>https://stackoverflow.com/a/21789167</p>

<hr/>

<p>This is post 084 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Organizing multiple Git identities
            </title>
            <guid>
                https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities
            </guid>
            <link>
                https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities?utm_source=rss
            </link>
            <pubDate>
                Fri, 13 Oct 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>Here&#39;s a quick tip on how to manage multiple Git identities (e.g. personal, work, client1, client2).</p>

<p>I organize my Git repos in three levels. My personal projects live in a <code>~/sources</code> directory. All my work projects live in <code>~/work</code>. This is the first level.</p>

<p>Level 2 is the client, e.g. <code>~/work/client1</code>. Naturally, level 3 is the project repository: <code>~/work/client1/foo-api</code>.</p>

<p>This is how my work directory is organized:</p>

<p><code>
/Users/garrit/work
├── client1
│   ├── foo-api
│   ├── foo-ios
│   └── foo-android
└── client2
    ├── bar-ios
    └── bar-middleware
</code></p>

<p>Now, say that <code>client2</code> demands that we commit with a different identity than our default work email. Besides that, you probably also have a personal email address for your own projects. How do you manage that?</p>

<h2>.gitconfig includes</h2>

<p>The global configuration file for Git is <code>~/.gitconfig</code>. If you&#39;ve ever set a parameter like <code>git config user.name &quot;Foo Bar&quot;</code>: this is where it ended up.</p>

<p>One awesome feature of the .gitconfig file is that you can <strong>conditionally include other config files</strong>, and this is what does the trick. Here&#39;s my <code>~/.gitconfig</code> file:</p>

<p><code></code>`ini
[user]
    name = Garrit Franke
    email = garrit@slashdev.space</p>

<p>[includeIf &quot;gitdir:~/work/&quot;]
    path = ~/.gitconfig-work</p>

<p>[includeIf &quot;gitdir:~/work/client2/&quot;]
    path = ~/.gitconfig-client2</p>

<p>[includeIf &quot;gitdir:~/sources/&quot;]
    path = ~/.gitconfig-personal</p>

<h1>...</h1>

<p><code></code>`</p>

<p>By default, my name and email are always set to my personal identity. I also store some other global settings here, but those are not relevant for this post. If the repository is located inside the <code>~/work</code> directory, a file named <code>~/.gitconfig-work</code> is included. This is just another gitconfig file. This is what that looks like in my case:</p>

<p><code></code>`ini
[user]
    name = Garrit Franke
    signingkey = 12345678
    email = garrit@work.de</p>

<p>[commit]
    gpgsign = true
<code></code>`</p>

<p>I hope you&#39;ll see where this is going. For every identity, you keep a separate gitconfig file and include it in the main <code>~/.gitconfig</code>. Crucially, this requires you to organize your repositories grouped by client.</p>

<p>This trick has simplified my project onboarding quite a bit. No more &quot;You forgot to update your Email Address&quot; requests from clients!</p>

<hr/>

<p>This is post 083 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                So, you want to win the lottery
            </title>
            <guid>
                https://garrit.xyz/posts/2023-08-23-so,-you-want-to-win-the-lottery
            </guid>
            <link>
                https://garrit.xyz/posts/2023-08-23-so,-you-want-to-win-the-lottery?utm_source=rss
            </link>
            <pubDate>
                Wed, 23 Aug 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>The lottery is often used as a comparison for something that&#39;s far out of reach. But how far out of reach exactly is the lottery?</p>

<h2>1 in 302 Million</h2>

<p>Apparently, you have a 1 in 302 million chance to win the lottery. Well, that sounds like a lot... but how much is that exactly?</p>

<p>Imagine 66 bathtubs.</p>

<p>Now, imagine each of these bathtubs is filled to the brim with <strong>rice</strong>.</p>

<p>One of the grains of rice inside one of the bathtubs is painted gold. This is our jackpot.</p>

<p>Whenever you purchase a lottery ticket, imagine grabbing one grain of rice from this sea of bath tubs. Do you think you&#39;d have a chance to find the golden grain?</p>

<p>Source: <a href="https://www.youtube.com/watch?v=3Yn_3HqfV1w">The Scam No One Sees</a></p>

<hr/>

<p>This is post 074 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                Instant dark theme
            </title>
            <guid>
                https://garrit.xyz/posts/2023-04-12-instant-dark-theme
            </guid>
            <link>
                https://garrit.xyz/posts/2023-04-12-instant-dark-theme?utm_source=rss
            </link>
            <pubDate>
                Wed, 12 Apr 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>Thanks to <a href="https://jacksonchen666.com/">Jacksons</a> <a href="https://github.com/garritfra/darktheme.club/pull/79">update to darktheme.club</a>, I just came across a neat little <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme">CSS property</a> that turns a mostly CSS-free document into a pleasantly dark site:</p>

<p><code>css
:root {
  color-scheme: light dark;
}
</code></p>

<p>This will adjust all elements on the page to the color scheme preferred by the user - without any other custom styles! 🤯 It is also <a href="https://caniuse.com/mdn-css_properties_color-scheme">widely supported</a> by browsers.</p>

<p>I&#39;ve always been quite dependent on CSS-frameworks for any project I&#39;m starting. Going forward, I&#39;d be interested to see how framework-less sites would feel using this property. If all else fails, there&#39;s always the awesome <a href="https://simplecss.org/">simple.css</a> library, which you can slap on top of a raw document to make it pretty (and dark, if preferred) without using custom classes.</p>

<hr/>

<p>This is post 064 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
        <item>
            <title>
                TIL about CSS Insets
            </title>
            <guid>
                https://garrit.xyz/posts/2023-02-19-til-about-css-insets
            </guid>
            <link>
                https://garrit.xyz/posts/2023-02-19-til-about-css-insets?utm_source=rss
            </link>
            <pubDate>
                Sun, 19 Feb 2023 00:00:00 +0000
            </pubDate>
            <description>
                <![CDATA[<p>Just a quick tip that I thought is worth sharing. Instead of declaring:</p>

<p><code>css
.foo { 
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
</code></p>

<p>you can just use:</p>

<p><code>css
.foo {
  inset: 0;
}
</code></p>

<p>It&#39;s supported everywhere computers are sold!</p>

<p>MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/inset</p>

<p>Source: https://front-end.social/@estelle/109878532782943511</p>

<p>This is post 047 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>]]>
            </description>
        </item>
    </channel>
</rss>